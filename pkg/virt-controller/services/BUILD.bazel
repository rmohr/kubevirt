load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "generated_mock_vm.go",
        "template.go",
        "vm.go",
    ],
    importpath = "kubevirt.io/kubevirt/pkg/virt-controller/services",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/api/v1:go_default_library",
        "//pkg/kubecli:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/precond:go_default_library",
        "//pkg/registry-disk:go_default_library",
        "//vendor/github.com/golang/mock/gomock:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/errors:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/fields:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/labels:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
    ],
)

go_test(
    name = "go_default_xtest",
    srcs = [
        "services_suite_test.go",
        "template_test.go",
        "vm_test.go",
    ],
    deps = [
        ":go_default_library",
        "//pkg/api/v1:go_default_library",
        "//pkg/kubecli:go_default_library",
        "//pkg/log:go_default_library",
        "//vendor/github.com/onsi/ginkgo:go_default_library",
        "//vendor/github.com/onsi/gomega:go_default_library",
        "//vendor/github.com/onsi/gomega/ghttp:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
    ],
)
